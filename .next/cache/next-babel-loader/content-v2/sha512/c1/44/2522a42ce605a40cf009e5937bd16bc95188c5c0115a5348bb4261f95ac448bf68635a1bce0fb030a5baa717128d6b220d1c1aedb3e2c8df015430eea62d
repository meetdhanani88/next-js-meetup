{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\n\nfunction Meetupform() {\n  const Router = useRouter();\n  const {\n    0: success,\n    1: setsuccess\n  } = useState(false);\n  const {\n    0: Loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n\n  const Suceessmsg = /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(\"h1\", {\n      children: \"Inserted Successfully\"\n    }), /*#__PURE__*/_jsx(\"p\", {\n      children: \"Redirect to Homepage in 2 Seconds...\"\n    })]\n  });\n\n  async function getmeetupdata(data) {\n    setLoading(true);\n    let status;\n\n    try {\n      const res = await fetch(\"/api/new-meetup\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"res\", res);\n      status = res.statusText;\n      const result = await res.json();\n      console.log(result);\n      setLoading(false);\n      setsuccess(true);\n      setTimeout(() => Router.push(\"/\"), 1000);\n    } catch (error) {\n      console.log(\"status\", status);\n      setError({\n        msg: status\n      });\n      setLoading(false);\n      setsuccess(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"New Meetup\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"Book New MeetUp\"\n      })]\n    }), Loading && !success && /*#__PURE__*/_jsx(\"h1\", {\n      children: \"Loading...\"\n    }), error && /*#__PURE__*/_jsxs(\"h1\", {\n      children: [\"Error \", error.msg]\n    }), !success && !error && /*#__PURE__*/_jsx(NewMeetupForm, {\n      onAddMeetup: getmeetupdata\n    }), success && Suceessmsg]\n  });\n}\n\nexport default Meetupform;","map":null,"metadata":{},"sourceType":"module"}