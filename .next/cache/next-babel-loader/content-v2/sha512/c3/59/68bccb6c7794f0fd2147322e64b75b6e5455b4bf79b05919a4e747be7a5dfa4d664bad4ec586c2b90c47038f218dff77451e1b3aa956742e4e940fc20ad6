{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://meet:mnXyMojHjW7ymLmt@cluster0.gyf4z.mongodb.net/meetup?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupcollection = db.collection(\"meetupdata\");\n  const meetupdata = await meetupcollection.find({}).project({\n    _id: 1\n  }).toArray();\n  return {\n    paths: meetupdata.map(item => {\n      return {\n        params: {\n          meetupid: item._id.toString()\n        }\n      };\n    }),\n    fallback: true\n  };\n}\nexport async function getStaticProps(context) {\n  const id = context.params.meetupid;\n  console.log(\"context\", context); //fetch Data from API\n  //connect to usermongodb & create databse with name \"meetup\"\n\n  const client = await MongoClient.connect(\"mongodb+srv://meet:mnXyMojHjW7ymLmt@cluster0.gyf4z.mongodb.net/meetup?retryWrites=true&w=majority\");\n  console.log(\"cli\", client); //Redirect to client database\n\n  const db = client.db(); //Redirect table(Collection) With name \"MEETUP\"\n\n  const meetupcollection = db.collection(\"meetupdata\");\n  const currentdata = await meetupcollection.findOne({\n    _id: ObjectId(id)\n  });\n  currentdata.id = currentdata._id.toString();\n  delete currentdata._id;\n  return {\n    props: {\n      meetupdata: currentdata\n    },\n    revalidate: 1\n  };\n}\n\nfunction Meetupitem(props) {\n  const router = useRouter();\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsx(\"h1\", {\n      children: \"Loading...\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: props.meetupdata.title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: props.meetupdata.description\n      })]\n    }), /*#__PURE__*/_jsx(\"img\", {\n      src: props.meetupdata.image,\n      alt: \"img-1\",\n      width: \"100%\"\n    }), /*#__PURE__*/_jsx(\"h1\", {\n      children: props.meetupdata.title\n    }), /*#__PURE__*/_jsx(\"address\", {\n      children: props.meetupdata.address\n    })]\n  });\n}\n\nexport default Meetupitem;","map":null,"metadata":{},"sourceType":"module"}