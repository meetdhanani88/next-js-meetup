{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/c223/Downloads/react project/NextJs-Project/pages/[meetupid]/index.js\";\nimport React from 'react';\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nexport async function getStaticPaths() {\n  //connect to usermongodb & create databse with name \"meetup\"\n  const client = await MongoClient.connect(\"mongodb+srv://meet:mnXyMojHjW7ymLmt@cluster0.gyf4z.mongodb.net/meetup?retryWrites=true&w=majority\");\n  console.log(\"cli\", client); //Redirect to client database\n\n  const db = client.db(); //Redirect table(Collection) With name \"MEETUP\"\n\n  const meetupcollection = db.collection(\"meetupdata\");\n  const meetupdata = await meetupcollection.find({}).project({\n    _id: 1\n  }).toArray();\n  console.log(meetupdata);\n  return {\n    paths: meetupdata.map(item => ({\n      params: {\n        meetupid: item._id.toString()\n      }\n    })),\n    fallback: true\n  };\n}\nexport async function getStaticProps(context) {\n  const id = context.params.meetupid;\n  console.log(\"context\", context); //fetch Data from API\n  //connect to usermongodb & create databse with name \"meetup\"\n\n  const client = await MongoClient.connect(\"mongodb+srv://meet:mnXyMojHjW7ymLmt@cluster0.gyf4z.mongodb.net/meetup?retryWrites=true&w=majority\");\n  console.log(\"cli\", client); //Redirect to client database\n\n  const db = client.db(); //Redirect table(Collection) With name \"MEETUP\"\n\n  const meetupcollection = db.collection(\"meetupdata\");\n  const currentdata = await meetupcollection.findOne({\n    _id: ObjectId(id)\n  });\n  currentdata.id = currentdata._id.toString();\n  delete currentdata._id;\n  return {\n    props: {\n      meetupdata: currentdata\n    },\n    revalidate: 1\n  };\n}\n\nfunction Meetupitem(props) {\n  const router = useRouter();\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.meetupdata.image,\n      alt: \"img-1\",\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.meetupdata.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"address\", {\n      children: props.meetupdata.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport default Meetupitem;","map":{"version":3,"sources":["/Users/c223/Downloads/react project/NextJs-Project/pages/[meetupid]/index.js"],"names":["React","MongoClient","ObjectId","useRouter","Head","getStaticPaths","client","connect","console","log","db","meetupcollection","collection","meetupdata","find","project","_id","toArray","paths","map","item","params","meetupid","toString","fallback","getStaticProps","context","id","currentdata","findOne","props","revalidate","Meetupitem","router","isFallback","image","title","address"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,OAAO,eAAeC,cAAf,GAAgC;AAEnC;AACA,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CAAoB,mGAApB,CAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,MAAnB,EAJmC,CAKnC;;AACA,QAAMI,EAAE,GAAGJ,MAAM,CAACI,EAAP,EAAX,CANmC,CAOnC;;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,YAAd,CAAzB;AAEA,QAAMC,UAAU,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0BC,OAA1B,CAAkC;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAlC,EAA8CC,OAA9C,EAAzB;AAEAT,EAAAA,OAAO,CAACC,GAAR,CAAYI,UAAZ;AAGA,SAAO;AACHK,IAAAA,KAAK,EAAEL,UAAU,CAACM,GAAX,CAAeC,IAAI,KACtB;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,IAAI,CAACJ,GAAL,CAASO,QAAT;AAAZ;AAAV,KADsB,CAAnB,CADJ;AAIHC,IAAAA,QAAQ,EAAE;AAJP,GAAP;AAOH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAE1C,QAAMC,EAAE,GAAGD,OAAO,CAACL,MAAR,CAAeC,QAA1B;AAEAd,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBiB,OAAvB,EAJ0C,CAM1C;AAEA;;AACA,QAAMpB,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CAAoB,mGAApB,CAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,MAAnB,EAV0C,CAW1C;;AACA,QAAMI,EAAE,GAAGJ,MAAM,CAACI,EAAP,EAAX,CAZ0C,CAa1C;;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,YAAd,CAAzB;AAEA,QAAMgB,WAAW,GAAG,MAAMjB,gBAAgB,CAACkB,OAAjB,CAAyB;AAAEb,IAAAA,GAAG,EAAEd,QAAQ,CAACyB,EAAD;AAAf,GAAzB,CAA1B;AAEAC,EAAAA,WAAW,CAACD,EAAZ,GAAiBC,WAAW,CAACZ,GAAZ,CAAgBO,QAAhB,EAAjB;AACA,SAAOK,WAAW,CAACZ,GAAnB;AAEA,SAAO;AACHc,IAAAA,KAAK,EAAE;AACHjB,MAAAA,UAAU,EAAEe;AADT,KADJ;AAIHG,IAAAA,UAAU,EAAE;AAJT,GAAP;AAOH;;AAID,SAASC,UAAT,CAAoBF,KAApB,EAA2B;AACvB,QAAMG,MAAM,GAAG9B,SAAS,EAAxB;;AAEA,MAAI8B,MAAM,CAACC,UAAX,EAAuB;AACnB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAGD,sBACI;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEJ,KAAK,CAACjB,UAAN,CAAiBsB,KAA3B;AAAkC,MAAA,GAAG,EAAC,OAAtC;AAA8C,MAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKL,KAAK,CAACjB,UAAN,CAAiBuB;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAUN,KAAK,CAACjB,UAAN,CAAiBwB;AAA3B;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAQH;;AAED,eAAeL,UAAf","sourcesContent":["import React from 'react';\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\n\n\nexport async function getStaticPaths() {\n\n    //connect to usermongodb & create databse with name \"meetup\"\n    const client = await MongoClient.connect(\"mongodb+srv://meet:mnXyMojHjW7ymLmt@cluster0.gyf4z.mongodb.net/meetup?retryWrites=true&w=majority\")\n    console.log(\"cli\", client);\n    //Redirect to client database\n    const db = client.db();\n    //Redirect table(Collection) With name \"MEETUP\"\n    const meetupcollection = db.collection(\"meetupdata\");\n\n    const meetupdata = await meetupcollection.find({}).project({ _id: 1 }).toArray()\n\n    console.log(meetupdata)\n\n\n    return {\n        paths: meetupdata.map(item => (\n            { params: { meetupid: item._id.toString() } }\n        )),\n        fallback: true\n    }\n\n}\n\nexport async function getStaticProps(context) {\n\n    const id = context.params.meetupid;\n\n    console.log(\"context\", context);\n\n    //fetch Data from API\n\n    //connect to usermongodb & create databse with name \"meetup\"\n    const client = await MongoClient.connect(\"mongodb+srv://meet:mnXyMojHjW7ymLmt@cluster0.gyf4z.mongodb.net/meetup?retryWrites=true&w=majority\")\n    console.log(\"cli\", client);\n    //Redirect to client database\n    const db = client.db();\n    //Redirect table(Collection) With name \"MEETUP\"\n    const meetupcollection = db.collection(\"meetupdata\");\n\n    const currentdata = await meetupcollection.findOne({ _id: ObjectId(id) });\n\n    currentdata.id = currentdata._id.toString();\n    delete currentdata._id;\n\n    return {\n        props: {\n            meetupdata: currentdata\n        },\n        revalidate: 1\n    }\n\n}\n\n\n\nfunction Meetupitem(props) {\n    const router = useRouter();\n\n    if (router.isFallback) {\n        return <h1>Loading...</h1>\n    }\n\n\n    return (\n        <>\n            <img src={props.meetupdata.image} alt=\"img-1\" width=\"100%\" />\n            <h1>{props.meetupdata.title}</h1>\n            <address>{props.meetupdata.address}</address>\n        </>\n    )\n\n}\n\nexport default Meetupitem;"]},"metadata":{},"sourceType":"module"}