{"ast":null,"code":"import _regeneratorRuntime from \"/Users/c223/Downloads/react project/NextJs-Project/node_modules/@babel/runtime/regenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/c223/Downloads/react project/NextJs-Project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/c223/Downloads/react project/NextJs-Project/pages/newmeetup/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\n\nfunction Meetupform() {\n  _s();\n\n  var Router = useRouter();\n\n  var _useState = useState(false),\n      success = _useState[0],\n      setsuccess = _useState[1];\n\n  var _useState2 = useState(false),\n      Loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  function getmeetupdata(_x) {\n    return _getmeetupdata.apply(this, arguments);\n  }\n\n  function _getmeetupdata() {\n    _getmeetupdata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var res, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"/api/new-meetup\", {\n                method: \"POST\",\n                body: JSON.stringify(data),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 2:\n              res = _context.sent;\n              console.log(\"res\", res);\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              result = _context.sent;\n              console.log(result);\n\n              if (result.msg === \"dsta inserted\") {\n                setsuccess(true);\n                setTimeout(function () {\n                  return Router.push(\"/\");\n                }, 2000);\n              }\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getmeetupdata.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"New Meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Book New MeetUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), Loading && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }, this), !success && /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n      onAddMeetup: getmeetupdata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 26\n    }, this), success && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Inserted Successfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Meetupform, \"rpkaIBB41Mvot1QV0u+KdiSeWps=\", false, function () {\n  return [useRouter];\n});\n\n_c = Meetupform;\nexport default Meetupform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meetupform\");","map":{"version":3,"sources":["/Users/c223/Downloads/react project/NextJs-Project/pages/newmeetup/index.js"],"names":["React","useState","NewMeetupForm","Head","useRouter","Meetupform","Router","success","setsuccess","Loading","setLoading","getmeetupdata","data","fetch","method","body","JSON","stringify","headers","res","console","log","json","result","msg","setTimeout","push"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AACA,SAASC,UAAT,GAAsB;AAAA;;AAClB,MAAMC,MAAM,GAAGF,SAAS,EAAxB;;AADkB,kBAEYH,QAAQ,CAAC,KAAD,CAFpB;AAAA,MAEXM,OAFW;AAAA,MAEFC,UAFE;;AAAA,mBAGYP,QAAQ,CAAC,KAAD,CAHpB;AAAA,MAGXQ,OAHW;AAAA,MAGFC,UAHE;;AAAA,WAIHC,aAJG;AAAA;AAAA;;AAAA;AAAA,8EAIlB,iBAA6BC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEsBC,KAAK,CAAC,iBAAD,EACnB;AACIC,gBAAAA,MAAM,EAAE,MADZ;AAEIC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFV;AAGIM,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX;AAHb,eADmB,CAF3B;;AAAA;AAEUC,cAAAA,GAFV;AAUIC,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;AAVJ;AAAA,qBAWyBA,GAAG,CAACG,IAAJ,EAXzB;;AAAA;AAWUC,cAAAA,MAXV;AAYIH,cAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;;AAEA,kBAAIA,MAAM,CAACC,GAAP,KAAe,eAAnB,EAAoC;AAChChB,gBAAAA,UAAU,CAAC,IAAD,CAAV;AACAiB,gBAAAA,UAAU,CAAC;AAAA,yBAAMnB,MAAM,CAACoB,IAAP,CAAY,GAAZ,CAAN;AAAA,iBAAD,EAAyB,IAAzB,CAAV;AACH;;AAjBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJkB;AAAA;AAAA;;AAuBlB,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKjB,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALhB,EAMK,CAACF,OAAD,iBAAY,QAAC,aAAD;AAAe,MAAA,WAAW,EAAEI;AAA5B;AAAA;AAAA;AAAA;AAAA,YANjB,EAOKJ,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPhB;AAAA,kBADJ;AAWH;;GAlCQF,U;UACUD,S;;;KADVC,U;AAoCT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react'\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nfunction Meetupform() {\n    const Router = useRouter();\n    const [success, setsuccess] = useState(false);\n    const [Loading, setLoading] = useState(false);\n    async function getmeetupdata(data) {\n\n        const res = await fetch(\"/api/new-meetup\",\n            {\n                method: \"POST\",\n                body: JSON.stringify(data),\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            })\n        console.log(\"res\", res);\n        const result = await res.json();\n        console.log(result);\n\n        if (result.msg === \"dsta inserted\") {\n            setsuccess(true);\n            setTimeout(() => Router.push(\"/\"), 2000)\n        }\n    }\n    return (\n        <>\n            <Head>\n                <title>New Meetup</title>\n                <meta name='description' content='Book New MeetUp' ></meta>\n            </Head>\n            {Loading && <h1>Loading...</h1>}\n            {!success && <NewMeetupForm onAddMeetup={getmeetupdata}></NewMeetupForm>}\n            {success && <h1>Inserted Successfully</h1>}\n        </>\n    )\n}\n\nexport default Meetupform;  "]},"metadata":{},"sourceType":"module"}