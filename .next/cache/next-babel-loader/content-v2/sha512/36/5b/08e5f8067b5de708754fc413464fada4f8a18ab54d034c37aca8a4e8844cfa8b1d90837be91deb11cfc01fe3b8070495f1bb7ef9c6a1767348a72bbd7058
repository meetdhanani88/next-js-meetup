{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/c223/Downloads/react project/NextJs-Project/pages/[meetupid]/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\n\nfunction Meetupitem(props) {\n  _s();\n\n  var router = useRouter();\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupdata.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupdata.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.meetupdata.image,\n      alt: \"img-1\",\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.meetupdata.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"address\", {\n      children: props.meetupdata.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Meetupitem, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Meetupitem;\nexport var __N_SSG = true;\nexport default Meetupitem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meetupitem\");","map":{"version":3,"sources":["/Users/c223/Downloads/react project/NextJs-Project/pages/[meetupid]/index.js"],"names":["React","useRouter","Head","Meetupitem","props","router","isFallback","meetupdata","title","description","image","address"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAmDA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AAEA,MAAII,MAAM,CAACC,UAAX,EAAuB;AACnB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAGD,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQF,KAAK,CAACG,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEJ,KAAK,CAACG,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,GAAG,EAAEL,KAAK,CAACG,UAAN,CAAiBG,KAA3B;AAAkC,MAAA,GAAG,EAAC,OAAtC;AAA8C,MAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,gBAAKN,KAAK,CAACG,UAAN,CAAiBC;AAAtB;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,gBAAUJ,KAAK,CAACG,UAAN,CAAiBI;AAA3B;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAYH;;GApBQR,U;UACUF,S;;;KADVE,U;;AAsBT,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\n\n\nexport async function getStaticPaths() {\n\n\n    const client = await MongoClient.connect(\"mongodb+srv://meet:mnXyMojHjW7ymLmt@cluster0.gyf4z.mongodb.net/meetup?retryWrites=true&w=majority\")\n\n    const db = client.db();\n\n    const meetupcollection = db.collection(\"meetupdata\");\n\n    const meetupdata = await meetupcollection.find({}).project({ _id: 1 }).toArray()\n\n    return {\n        paths: meetupdata.map(item => { return { params: { meetupid: item._id.toString() } } }),\n        fallback: true\n    }\n\n}\n\nexport async function getStaticProps(context) {\n\n    const id = context.params.meetupid;\n\n    console.log(\"context\", context);\n\n    //fetch Data from API\n\n    //connect to usermongodb & create databse with name \"meetup\"\n    const client = await MongoClient.connect(\"mongodb+srv://meet:mnXyMojHjW7ymLmt@cluster0.gyf4z.mongodb.net/meetup?retryWrites=true&w=majority\")\n    console.log(\"cli\", client);\n    //Redirect to client database\n    const db = client.db();\n    //Redirect table(Collection) With name \"MEETUP\"\n    const meetupcollection = db.collection(\"meetupdata\");\n\n    const currentdata = await meetupcollection.findOne({ _id: ObjectId(id) });\n\n    currentdata.id = currentdata._id.toString();\n    delete currentdata._id;\n\n    return {\n        props: {\n            meetupdata: currentdata\n        },\n        revalidate: 1\n    }\n\n}\n\nfunction Meetupitem(props) {\n    const router = useRouter();\n\n    if (router.isFallback) {\n        return <h1>Loading...</h1>\n    }\n\n\n    return (\n        <>\n            <Head>\n                <title>{props.meetupdata.title}</title>\n                <meta name='description' content={props.meetupdata.description} ></meta>\n            </Head>\n            <img src={props.meetupdata.image} alt=\"img-1\" width=\"100%\" />\n            <h1>{props.meetupdata.title}</h1>\n            <address>{props.meetupdata.address}</address>\n        </>\n    )\n\n}\n\nexport default Meetupitem;"]},"metadata":{},"sourceType":"module"}