{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from '../components/meetups/MeetupList';\nimport Head from 'next/head';\nconst Dummy_data = [{\n  id: \"q1\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Buckingham_Palace_aerial_view_2016_%28cropped%29.jpg/1200px-Buckingham_Palace_aerial_view_2016_%28cropped%29.jpg\",\n  title: \"1st MeetUp\",\n  address: \"b-305 xyz Palace\",\n  description: \"Nice Palace\"\n}, {\n  id: \"q2\",\n  image: \"https://images.unsplash.com/photo-1600112356915-089abb8fc71a?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8bXlzb3JlJTIwcGFsYWNlfGVufDB8fDB8fA%3D%3D&w=1000&q=80\",\n  title: \"2nd MeetUp\",\n  address: \"b-305 abc Palace\",\n  description: \"Good Palace\"\n}];\nexport async function getStaticProps() {\n  //fetch Data from API\n  //connect to usermongodb & create databse with name \"meetup\"\n  const client = await MongoClient.connect(\"mongodb+srv://meet:mnXyMojHjW7ymLmt@cluster0.gyf4z.mongodb.net/meetup?retryWrites=true&w=majority\"); //Redirect to client database\n\n  const db = client.db(); //Redirect table(Collection) With name \"MEETUP\"\n\n  const meetupcollection = db.collection(\"meetupdata\");\n  const meetup = await meetupcollection.find().toArray();\n  console.log(\"meetup\", meetup);\n  client.close(); // console.log(\"gahgs\", arr);\n\n  return {\n    props: {\n      meetups: meetup.map(item => {\n        item.id = item._id.toString();\n        delete item._id;\n        return _objectSpread({}, item);\n      })\n    },\n    revalidate: 1\n  };\n}\n\nfunction Homepage(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"React MeetUp\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"Huge List Of Meetups\"\n      })]\n    }), /*#__PURE__*/_jsx(MeetupList, {\n      meetups: props.meetups\n    })]\n  });\n}\n\nexport default Homepage;","map":null,"metadata":{},"sourceType":"module"}